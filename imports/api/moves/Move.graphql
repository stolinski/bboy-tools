scalar Date

# type Moves {
#   moves: [Move]
#   topRock: [Move]
#   footwork: [Move]
#   powerMove: [Move]
#   goDown: [Move]
#   freeze: [Move]
#   burner: [Move]
# }

type Move {
  _id: ID!
  owner: ID
  user: User
  createdAt: Date
  name: String
  value: String
  type: String
  battleUsed: Boolean
}

input MoveInput {
  name: String!
  value: String
  type: String!
}

type Query {
  # userMoves: [Move]
  moves: [Move]
}

type Mutation {
  addMove(move: MoveInput!): Move
  resetBattleMode: Move
  useBattleMode(id: ID!): Move
  deleteMove(id: ID!): Move
  updateMove: Move
}
